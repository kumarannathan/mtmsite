{"version":3,"file":"react-flatpickr.js","sources":["../lib/DateTimePicker.tsx"],"sourcesContent":["import React, {useEffect, useRef, FC, useMemo, useCallback, useImperativeHandle, ChangeEventHandler} from 'react';\nimport flatpickr from 'flatpickr';\nimport {Options, DateOption, Plugin, ParsedOptions} from 'flatpickr/dist/types/options';\nimport {DateTimePickerProps} from '../types/react-flatpickr';\nimport type {OptionsType} from '../types/react-flatpickr';\n\nconst callbacks = ['onCreate', 'onDestroy'] as const;\nconst hooks = [\n  'onChange',\n  'onOpen',\n  'onClose',\n  'onMonthChange',\n  'onYearChange',\n  'onReady',\n  'onValueUpdate',\n  'onDayCreate'\n] as const;\n\nconst mergeHooks = (inputOptions: flatpickr.Options.Options, props: DateTimePickerProps): OptionsType => {\n  hooks.forEach((hook: string) => {\n    const hookFn = props[hook as keyof DateTimePickerProps];\n    const existingHookFn = inputOptions[hook as keyof Options];\n    if (hookFn) {\n      if (existingHookFn && !Array.isArray(existingHookFn)) {\n        (inputOptions as any)[hook] = [(inputOptions as any)[hook]];\n      } else if (!(inputOptions as any)[hook]) {\n        (inputOptions as any)[hook] = [];\n      }\n\n      const propHook = Array.isArray(hookFn) ? hookFn : [hookFn];\n      if ((inputOptions as any)[hook].length === 0) {\n        (inputOptions as any)[hook] = propHook;\n      } else {\n        (inputOptions as any)[hook].push(...propHook);\n      }\n    }\n  });\n\n  hooks.forEach((hook) => {\n    delete (props as any)[hook];\n  });\n  callbacks.forEach((callback) => {\n    delete (props as any)[callback];\n  });\n\n  return inputOptions;\n};\n\nexport const DateTimePicker: FC<DateTimePickerProps> = (defaultProps) => {\n  const props = useMemo(() => ({...defaultProps}), [defaultProps]);\n  const {defaultValue, options = {}, value, children, render} = props;\n  const mergedOptions = useMemo(() => mergeHooks(options, props), [options, props]);\n  const nodeRef = useRef<HTMLElement | null>(null);\n  const flatpickrRef = useRef<flatpickr.Instance>(undefined);\n\n  useImperativeHandle(\n    defaultProps.ref,\n    () => {\n      return {\n        get flatpickr() {\n          return flatpickrRef.current;\n        }\n      };\n    },\n    []\n  );\n\n  useEffect(() => {\n    const createFlatpickrInstance = () => {\n      mergedOptions.onClose =\n        mergedOptions.onClose ||\n        (() => {\n          if (nodeRef.current?.blur) nodeRef.current.blur();\n        });\n\n      // @ts-expect-error for some reason the default import isnt working correctly\n      flatpickrRef.current = (flatpickr?.default || flatpickr)(nodeRef.current as HTMLElement, mergedOptions);\n\n      if (flatpickrRef.current && value !== undefined) {\n        flatpickrRef.current.setDate(value, false);\n      }\n\n      if (defaultProps.onCreate) defaultProps.onCreate(flatpickrRef.current);\n    };\n\n    const destroyFlatpickrInstance = () => {\n      if (defaultProps.onDestroy) defaultProps.onDestroy(flatpickrRef.current);\n      if (flatpickrRef.current) {\n        flatpickrRef.current.destroy();\n      }\n      flatpickrRef.current = undefined;\n    };\n\n    createFlatpickrInstance();\n\n    if (flatpickrRef.current) {\n      const optionsKeys = Object.getOwnPropertyNames(mergedOptions);\n      for (let index = optionsKeys.length - 1; index >= 0; index--) {\n        const key = optionsKeys[index];\n        let optionValue = mergedOptions[key as keyof OptionsType];\n\n        if (optionValue?.toString() !== flatpickrRef.current.config[key as keyof ParsedOptions]?.toString()) {\n          if (hooks.includes(key as any) && !Array.isArray(optionValue)) {\n            optionValue = [optionValue] as unknown as Plugin;\n          }\n\n          flatpickrRef.current.set(key as any, optionValue);\n        }\n      }\n\n      if (value !== undefined && value !== flatpickrRef.current.input.value) {\n        flatpickrRef.current.setDate(value as DateOption | DateOption[], false);\n      }\n    }\n\n    return () => {\n      destroyFlatpickrInstance();\n    };\n  }, [mergedOptions, options, props, value, defaultProps]);\n\n  const handleNodeChange = useCallback((node: HTMLElement | null) => {\n    nodeRef.current = node;\n  }, []);\n\n  if (render) {\n    return render({...props, defaultValue, value}, handleNodeChange);\n  }\n\n  const onChange: ChangeEventHandler<HTMLInputElement> = useCallback(\n    (e) => {\n      if (defaultProps && defaultProps.onChange) {\n        if (Array.isArray(defaultProps?.onChange)) {\n          defaultProps?.onChange?.forEach(() => [new Date(e.target.value)], value?.toString() || '');\n        } else if (typeof defaultProps.onChange === 'function') {\n          defaultProps?.onChange?.([new Date(e.target.value)], value?.toString() || '', flatpickrRef.current!);\n        }\n      }\n    },\n    [defaultProps, value]\n  );\n\n  return options.wrap ? (\n    <div className=\"flatpickr\" ref={handleNodeChange}>\n      {children}\n    </div>\n  ) : (\n    <input\n      // @ts-expect-error just allow all the passed props to be passed to the input\n      onChange={onChange}\n      {...props}\n      value={value?.toString()}\n      defaultValue={defaultValue}\n      ref={handleNodeChange}\n    />\n  );\n};\n"],"names":["callbacks","hooks","mergeHooks","inputOptions","props","hook","hookFn","existingHookFn","propHook","callback","DateTimePicker","defaultProps","useMemo","defaultValue","options","value","children","render","mergedOptions","nodeRef","useRef","flatpickrRef","useImperativeHandle","useEffect","createFlatpickrInstance","_a","flatpickr","destroyFlatpickrInstance","optionsKeys","index","key","optionValue","handleNodeChange","useCallback","node","onChange","e","_b","jsx"],"mappings":"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"}