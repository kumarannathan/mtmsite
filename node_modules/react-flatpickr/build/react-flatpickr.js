import { jsx as b } from "react/jsx-runtime";
import { useMemo as v, useRef as E, useImperativeHandle as F, useEffect as H, useCallback as S } from "react";
import w from "flatpickr";
const R = ["onCreate", "onDestroy"], k = [
  "onChange",
  "onOpen",
  "onClose",
  "onMonthChange",
  "onYearChange",
  "onReady",
  "onValueUpdate",
  "onDayCreate"
], u = (e, c) => (k.forEach((r) => {
  const i = c[r], n = e[r];
  if (i) {
    n && !Array.isArray(n) ? e[r] = [e[r]] : e[r] || (e[r] = []);
    const f = Array.isArray(i) ? i : [i];
    e[r].length === 0 ? e[r] = f : e[r].push(...f);
  }
}), k.forEach((r) => {
  delete c[r];
}), R.forEach((r) => {
  delete c[r];
}), e), M = (e) => {
  const c = v(() => ({ ...e }), [e]), { defaultValue: r, options: i = {}, value: n, children: f, render: l } = c, a = v(() => u(i, c), [i, c]), h = E(null), t = E(void 0);
  F(
    e.ref,
    () => ({
      get flatpickr() {
        return t.current;
      }
    }),
    []
  ), H(() => {
    var y;
    const g = () => {
      var C;
      a.onClose = a.onClose || (() => {
        var s;
        (s = h.current) != null && s.blur && h.current.blur();
      }), t.current = (((C = w) == null ? void 0 : C.default) || w)(h.current, a), t.current && n !== void 0 && t.current.setDate(n, !1), e.onCreate && e.onCreate(t.current);
    }, m = () => {
      e.onDestroy && e.onDestroy(t.current), t.current && t.current.destroy(), t.current = void 0;
    };
    if (g(), t.current) {
      const C = Object.getOwnPropertyNames(a);
      for (let s = C.length - 1; s >= 0; s--) {
        const D = C[s];
        let o = a[D];
        (o == null ? void 0 : o.toString()) !== ((y = t.current.config[D]) == null ? void 0 : y.toString()) && (k.includes(D) && !Array.isArray(o) && (o = [o]), t.current.set(D, o));
      }
      n !== void 0 && n !== t.current.input.value && t.current.setDate(n, !1);
    }
    return () => {
      m();
    };
  }, [a, i, c, n, e]);
  const A = S((g) => {
    h.current = g;
  }, []);
  if (l)
    return l({ ...c, defaultValue: r, value: n }, A);
  const x = S(
    (g) => {
      var m, y;
      e && e.onChange && (Array.isArray(e == null ? void 0 : e.onChange) ? (m = e == null ? void 0 : e.onChange) == null || m.forEach(() => [new Date(g.target.value)], (n == null ? void 0 : n.toString()) || "") : typeof e.onChange == "function" && ((y = e == null ? void 0 : e.onChange) == null || y.call(e, [new Date(g.target.value)], (n == null ? void 0 : n.toString()) || "", t.current)));
    },
    [e, n]
  );
  return i.wrap ? /* @__PURE__ */ b("div", { className: "flatpickr", ref: A, children: f }) : /* @__PURE__ */ b(
    "input",
    {
      onChange: x,
      ...c,
      value: n == null ? void 0 : n.toString(),
      defaultValue: r,
      ref: A
    }
  );
};
export {
  M as default
};
//# sourceMappingURL=react-flatpickr.js.map
